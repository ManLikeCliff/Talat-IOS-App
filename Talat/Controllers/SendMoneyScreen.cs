// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Globalization;
using CoreAnimation;
using CoreGraphics;
using Foundation;
using Newtonsoft.Json;
using Talat.Models;
using Talat.Utils;
using UIKit;

namespace Talat
{
	public partial class SendMoneyScreen : UIViewController
	{

        //public string accNumber;
        //public decimal accBalance;

        public SendMoneyScreen (IntPtr handle) : base (handle)
		{
		}

        UITextField SelectBanksTextField = new UITextField();
        UIPickerView BanksPicker = new UIPickerView();
        private SendMoneyClass sendMoney;
        private SendMoneyResponse sendMoneyResponse;

        string fixednumber;

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            Title = "Send Money";

            sendMoneyLoader.HidesWhenStopped = true;

            AddBanksField();
            BanksTextField();
            sendMoney = new SendMoneyClass();

            var user = MemoryManager.getUseAccountLogin("user_key");

            sendMoneyAccountLabel.Text = user.acctNumber;
            userAmountLabel.Text = "Balance: " + "₦" + user.acctBalance.ToString("N0");

            var bankListRecognizer = new UITapGestureRecognizer(HideBankList);
            bgImage.AddGestureRecognizer(bankListRecognizer);

            beneficiaryBtn.TouchUpInside += BeneficiaryBtn_TouchUpInside;

            makeTransferBtn.TouchUpInside += MakeTransferBtn_TouchUpInside;

            pinCancelBtn.TouchUpInside += PinCancelBtn_TouchUpInside;

            enterAccNum.EditingChanged += EnterAccNum_EditingChanged;

            pinTextField.EditingChanged += EnterPin_EditingChanged;

        }

        private void EnterAccNum_EditingChanged(object sender, EventArgs e)
        {
           
            if(enterAccNum.Text.Length == 10)
            {
                //Goto Verify Account Number

                fixednumber = enterAccNum.Text;
                validateAccountNumber(enterAccNum.Text);
            }

            if(enterAccNum.Text.Length > 10)
            {
                enterAccNum.Text = fixednumber;
            }
        }


        private void EnterPin_EditingChanged(object sender, EventArgs e)
        {

            if (pinTextField.Text.Length == 4)
            {
                //Goto send Money

                SendMoneyToAccount(pinTextField.Text);

                sendMoneyLoader.StartAnimating();
                pinTextField.UserInteractionEnabled = false;
            }

            if (pinTextField.Text.Length > 4)
            {
                pinTextField.Text = fixednumber;
            }
        }


        private async void SendMoneyToAccount(string pinText)
        {

            var user = MemoryManager.getUseAccountLogin("user_key");
            if(user != null)
            {
                sendMoney.transactionPin = pinText; sendMoney.amount = Convert.ToDecimal(amountToSend.Text);
                string mRaw = JsonConvert.SerializeObject(sendMoney);
                var result = await NetworkUtil.PostGeneralQueryAsyc("Transactions/SendMoney", mRaw, user.acctNumber, "FromAccount");
                if (!string.IsNullOrEmpty(result))
                {
                    sendMoneyResponse = JsonConvert.DeserializeObject<SendMoneyResponse>(result);

                
                    PerformSegue("ToTransferSuccess", this);

                }
            }
            

        }

        public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
        {
            sendMoneyLoader.StopAnimating();
            pinTextField.UserInteractionEnabled = true;

            base.PrepareForSegue(segue, sender);

            if (segue.DestinationViewController is ToTransferSuccess)
            {
                var dashboardScreen = segue.DestinationViewController as ToTransferSuccess;
                dashboardScreen.sendMoneyResponse = sendMoneyResponse ;
                dashboardScreen.amountToSend = Convert.ToDecimal(amountToSend.Text);
                dashboardScreen.recipientLabel = recipientLabel.Text;
               
            }


        }

        private async void validateAccountNumber(string enterAccNum)
        {
           
                var reult = await NetworkUtil.GetQueryAsyc("Users/UserDetails", enterAccNum, "acctNum");
                if (!string.IsNullOrEmpty(reult))
                {
                    var result = JsonConvert.DeserializeObject<SignupResponse>(reult);
                    if (result != null)
                    {
                        sendMoney.toAccount = result.acctNumber;
                        sendMoneyRestView.Hidden = false;
                        recipientLabel.Text = result.acctName;
                        recipientAccNum.Text = result.acctNumber;
                    }

                }
                else {
                    Util.showDialog("Please try again", "Invalid Account", this);
                }
            
        }

        private void PinCancelBtn_TouchUpInside(object sender, EventArgs e)
        {
            pinOverlayBg.Hidden = true;
            pinView.Hidden = true;
            NavigationItem.HidesBackButton = false;
        }

        private void MakeTransferBtn_TouchUpInside(object sender, EventArgs e)
        {
            var user = MemoryManager.getUseAccountLogin("user_key");
            if (!string.IsNullOrEmpty(amountToSend.Text))
            {
                pinAmountLabel.Text = "₦" +  amountToSend.Text;
                pinNameLabel.Text = recipientLabel.Text;
                pinAccountLabel.Text = user.acctNumber;

                UIView.Transition(pinView, 0.8f, UIViewAnimationOptions.TransitionCrossDissolve, () => { pinView.Hidden = true; }, null);
                NavigationItem.HidesBackButton = true;
                pinOverlayBg.Hidden = false;
                pinView.Hidden = false;
            }
            
        }

        private void BeneficiaryBtn_TouchUpInside(object sender, EventArgs e)
        {
            if (beneficiaryBtn.Selected)
            {
                beneficiaryBtn.Selected = false;
            }
            else
            {
                beneficiaryBtn.Selected = true;
            }
        }

        public void HideBankList(UITapGestureRecognizer bankListRecognizer)
        {
            banksTextField.ResignFirstResponder();
        }

        private void BanksTextField()
        {
            var bankList = new List<string> {
                "Select Bank", "FCMB", "ALATbyWEMA", "First Bank", "Guarantee Trust Bank", "Polaris Bank",
                                        "Access Bank", "Fidelity Bank", "Union Bank", "UBA", "Zenith Bank", "Ecobank",
                                        "Stanbic IBTC", "Sterling Bank", "Providus Bank", "KUDA", "VFD Bank"
            };

            var picker = new BanksPickerModel(bankList);

            BanksPicker.Model = picker;

            picker.ValueChanged += (sender, e) => {

                banksTextField.Text = picker.SelectedBankByUser; //Update The Selected Value In the TextField

                //View.EndEditing(true);// To Dismiss the Picker View Once The User Select The Value
            };
        }

        private void AddBanksField()
        {
            banksTextField.Placeholder = "Select Bank";
            banksTextField.Layer.CornerRadius = 15;
            banksTextField.TintColor = UIColor.White;
            banksTextField.Layer.MasksToBounds = true;
            banksTextField.AttributedPlaceholder = new NSAttributedString(banksTextField.AttributedPlaceholder.Value, foregroundColor: UIColor.White);
            banksTextField.Layer.SublayerTransform = CATransform3D.MakeTranslation(0, 0, 5); //to Create a Space At The beginning of the text field


            banksTextField.InputView = BanksPicker; //To Start The UIPickerView from The bottom.

            enterAccNum.Layer.BorderColor = UIColor.LightGray.CGColor;
            enterAccNum.Layer.ShadowColor = UIColor.LightGray.CGColor;
            enterAccNum.Layer.ShadowOffset = new CGSize(0, 1);
            enterAccNum.Layer.ShadowOpacity = 10.0f;
            enterAccNum.Layer.BorderWidth = 0.75f;
            //enterAccNum.ClipsToBounds = true;
            enterAccNum.Layer.SublayerTransform = CATransform3D.MakeTranslation(5, 0, 0);

            
            makeTransferBtn.Layer.ShadowColor = UIColor.DarkGray.CGColor;
            makeTransferBtn.Layer.ShadowOffset = new CGSize(0, 1.5);
            makeTransferBtn.Layer.ShadowOpacity = 2.0f;
        }

        public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);

            this.NavigationController.NavigationBarHidden = false;
        }
    }
}
