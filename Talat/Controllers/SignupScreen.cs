// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using Newtonsoft.Json;
using Talat.Models;
using Talat.Utils;
using UIKit;

namespace Talat
{
	public partial class SignupScreen : UIViewController
	{

        string newEmail;

        UIImageView pwordSignupToggleOffIcon = new UIImageView();

        public SignupScreen (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            signupLoader.HidesWhenStopped = true;

            // FirstnameIcon
            UIImageView fnameIcon = new UIImageView();
            fnameIcon.Image = UIImage.FromBundle("userIcon");

            UIView contentView = new UIView();
            contentView.AddSubview(fnameIcon);

            contentView.Frame = new CGRect(0, 0, UIImage.FromBundle("userIcon").Size.Width + 20, UIImage.FromBundle("userIcon").Size.Height);
            fnameIcon.Frame = new CGRect(10, 0, UIImage.FromBundle("userIcon").Size.Width, UIImage.FromBundle("userIcon").Size.Height);

            fnameTextField.LeftView = contentView;
            fnameTextField.LeftViewMode = UITextFieldViewMode.Always;

            fnameTextField.Layer.BorderColor = UIColor.FromName(name: "outline_color").CGColor;   //("AB2656")


            fnameTextField.Layer.BorderWidth = 1.5f;
            fnameTextField.Layer.CornerRadius = 20;
            fnameTextField.ClipsToBounds = true;


            // LastnameIcon
            UIImageView lnameIcon = new UIImageView();
            lnameIcon.Image = UIImage.FromBundle("userIcon");

            UIView contentLnameView = new UIView();
            contentLnameView.AddSubview(lnameIcon);

            contentLnameView.Frame = new CGRect(0, 0, UIImage.FromBundle("userIcon").Size.Width + 20, UIImage.FromBundle("userIcon").Size.Height);
            lnameIcon.Frame = new CGRect(10, 0, UIImage.FromBundle("userIcon").Size.Width, UIImage.FromBundle("userIcon").Size.Height);

            lnameTextField.LeftView = contentLnameView;
            lnameTextField.LeftViewMode = UITextFieldViewMode.Always;

            lnameTextField.Layer.BorderColor = UIColor.FromName(name: "outline_color").CGColor;   //("AB2656")


            lnameTextField.Layer.BorderWidth = 1.5f;
            lnameTextField.Layer.CornerRadius = 20;
            lnameTextField.ClipsToBounds = true;


            // EmailSignupIcon
            UIImageView emailSignupIcon = new UIImageView();
            emailSignupIcon.Image = UIImage.FromBundle("carbon_email-new");

            UIView contentEmailSignupView = new UIView();
            contentEmailSignupView.AddSubview(emailSignupIcon);

            contentEmailSignupView.Frame = new CGRect(0, 0, UIImage.FromBundle("carbon_email-new").Size.Width + 20, UIImage.FromBundle("carbon_email-new").Size.Height);
            emailSignupIcon.Frame = new CGRect(10, 0, UIImage.FromBundle("carbon_email-new").Size.Width, UIImage.FromBundle("carbon_email-new").Size.Height);

            emailSignupTextField.LeftView = contentEmailSignupView;
            emailSignupTextField.LeftViewMode = UITextFieldViewMode.Always;

            emailSignupTextField.Layer.BorderColor = UIColor.FromName(name: "outline_color").CGColor;   //("AB2656")


            emailSignupTextField.Layer.BorderWidth = 1.5f;
            emailSignupTextField.Layer.CornerRadius = 20;
            emailSignupTextField.ClipsToBounds = true;


            // TPinIcon
            UIImageView tPinSignupIcon = new UIImageView();
            tPinSignupIcon.Image = UIImage.FromBundle("TPinIcon");

            UIView contentTPinSignupView = new UIView();
            contentTPinSignupView.AddSubview(tPinSignupIcon);

            contentTPinSignupView.Frame = new CGRect(0, 0, UIImage.FromBundle("TPinIcon").Size.Width + 20, UIImage.FromBundle("TPinIcon").Size.Height);
            tPinSignupIcon.Frame = new CGRect(10, 0, UIImage.FromBundle("TPinIcon").Size.Width, UIImage.FromBundle("TPinIcon").Size.Height);

            tPinTextField.LeftView = contentTPinSignupView;
            tPinTextField.LeftViewMode = UITextFieldViewMode.Always;

            tPinTextField.Layer.BorderColor = UIColor.FromName(name: "outline_color").CGColor;   //("AB2656")


            tPinTextField.Layer.BorderWidth = 1.5f;
            tPinTextField.Layer.CornerRadius = 20;
            tPinTextField.ClipsToBounds = true;


            // PasswordIcon
            UIImageView pwordSignupIcon = new UIImageView();
            pwordSignupIcon.Image = UIImage.FromBundle("carbon_password");

            UIView contentpwordSignupView = new UIView();
            contentpwordSignupView.AddSubview(pwordSignupIcon);

            contentpwordSignupView.Frame = new CGRect(0, 0, UIImage.FromBundle("carbon_password").Size.Width + 20, UIImage.FromBundle("carbon_password").Size.Height);
            pwordSignupIcon.Frame = new CGRect(10, 0, UIImage.FromBundle("carbon_password").Size.Width, UIImage.FromBundle("carbon_password").Size.Height);

            pwordSignupTextField.LeftView = contentpwordSignupView;
            pwordSignupTextField.LeftViewMode = UITextFieldViewMode.Always;

            pwordSignupTextField.Layer.BorderColor = UIColor.FromName(name: "outline_color").CGColor;   //("AB2656")


            pwordSignupTextField.Layer.BorderWidth = 1.5f;
            pwordSignupTextField.Layer.CornerRadius = 20;
            pwordSignupTextField.ClipsToBounds = true;


            // PasswordToggleIcon
            pwordSignupToggleOffIcon.Image = UIImage.FromBundle("ph_eye-closed");

            UIView contentPassToggleOffView = new UIView();
            contentPassToggleOffView.AddSubview(pwordSignupToggleOffIcon);

            contentPassToggleOffView.Frame = new CGRect(0, 0, UIImage.FromBundle("ph_eye-closed").Size.Width + 8, UIImage.FromBundle("ph_eye-closed").Size.Height);
            pwordSignupToggleOffIcon.Frame = new CGRect(-10, 0, UIImage.FromBundle("ph_eye-closed").Size.Width, UIImage.FromBundle("ph_eye-closed").Size.Height);

            pwordSignupTextField.RightView = contentPassToggleOffView;
            pwordSignupTextField.RightViewMode = UITextFieldViewMode.Always;

            var taprecognizer = new UITapGestureRecognizer(HidePassword);
            contentPassToggleOffView.UserInteractionEnabled = true;
            contentPassToggleOffView.AddGestureRecognizer(taprecognizer);


            // createBtn logic
            createUserBtn.TouchUpInside += CreateUserBtn_TouchUpInside;
        }

        private void CreateUserBtn_TouchUpInside(object sender, EventArgs e)
        {
            signupLoader.StartAnimating();
            CreateUser(fnameTextField, lnameTextField, emailSignupTextField, tPinTextField, pwordSignupTextField);
        }

        private async void CreateUser(UITextField firstName, UITextField lastName, UITextField email, UITextField transactionPin, UITextField password)
        {
            if (!checkEmpty(firstName.Text.ToString()) && !checkEmpty(lastName.Text.ToString()) && !checkEmpty(email.Text.ToString()) && !checkEmpty(transactionPin.Text.ToString()) && !checkEmpty(password.Text.ToString()))
            {
                SignupModel signupModel = new SignupModel(firstName.Text, lastName.Text, email.Text, transactionPin.Text, password.Text);
                string mRawData = JsonConvert.SerializeObject(signupModel);
                var result = await NetworkUtil.PostGeneralRequestAsyc("Users/createaccount", mRawData);

                if (!string.IsNullOrEmpty(result))
                {
                    Console.WriteLine(result);
                    SignupResponse newUser = JsonConvert.DeserializeObject<SignupResponse>(result);
                    newEmail = newUser.email;

                    PerformSegue("toSuccess", this);
                }
                else
                {
                    Console.WriteLine(result);
                }
            }
        }

        public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
        {
            base.PrepareForSegue(segue, sender);

            if(segue.Identifier == "toSuccess")
            {
                var signupSuccessScreen = segue.DestinationViewController as SignupSuccessScreen;
                signupSuccessScreen.newEmail = newEmail;
            }
        }

        private bool checkEmpty(string value)
        {
            return string.IsNullOrEmpty(value);
        }

        private void HidePassword()
        {
            if (pwordSignupToggleOffIcon.Image == UIImage.FromBundle("ph_eye"))
            {
                pwordSignupTextField.SecureTextEntry = true;
                pwordSignupToggleOffIcon.Image = UIImage.FromBundle("ph_eye-closed");
            }
            else
            {
                pwordSignupTextField.SecureTextEntry = false;
                pwordSignupToggleOffIcon.Image = UIImage.FromBundle("ph_eye");
            }
        }
    }
}
